{"version":3,"sources":["components/ScrollToTop.js","components/Navigation.js","components/Weather/WeatherForm.js","components/Weather/WeatherTable.js","components/Weather/Weather.js","components/UserProfile.js","components/About.js","components/PrivacyPolicy.js","App.js","index.js"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Navigation","useAuth0","loginWithRedirect","logout","isAuthenticated","useState","showNav","setShowNav","className","onClick","icon","menuIcon","style","color","fontSize","Button","type","value","variant","backgroundColor","to","WeatherForm","handleSubmit","isError","Form","onSubmit","Group","controlId","Control","placeholder","marginTop","display","WeatherTable","isInitialRender","isLoading","city","country","temp","temp_max","temp_min","description","Table","striped","bordered","hover","maxWidth","Math","floor","src","alt","Weather","setCity","setCountry","setDescription","setIcon","setTemp","setTemp_min","setTemp_max","setIsLoading","setIsError","setIsInitialRender","getWeatherData","event","a","target","elements","alert","Number","isNaN","axios","get","process","response","data","name","sys","main","weather","console","log","weatherIcon","preventDefault","UserProfile","user","picture","nickname","email","About","info24Filled","fontWeight","href","rel","githubIcon","margin","App","path","PrivacyPolicy","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.6ea6ab68.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React, {useState} from 'react'\r\n\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n//services\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n//styles\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n//icons\r\nimport { Icon } from '@iconify/react';\r\nimport menuIcon from '@iconify/icons-ion/menu';\r\n\r\nconst Navigation = () => {\r\n    /*destructuring, this is fetching the loginWithRedirect that is a property of useAuth0() function \r\n    that has many properties, but we only need this one, not the whole object that the function returns. \r\n    Without destructuring it would look like:\r\n    const x = useAuth();\r\n    const loginWithRedirect = x.loginWithRedirect*/\r\n    const { loginWithRedirect, logout, isAuthenticated } = useAuth0(); \r\n\r\n    const [showNav, setShowNav] = useState(false);\r\n    \r\n    return (\r\n        <>\r\n            {/*SMALL SCREENS NAVIGATION*/}\r\n\r\n            <div className='hamburgerWrapper'>\r\n            <button className='hamburgerBtn' onClick={() => setShowNav(!showNav)}>\r\n                <Icon className='hamburgerIcon' icon={menuIcon} style={{color: '#0d6efd', fontSize: '45px'}} />\r\n            </button>\r\n            </div>\r\n\r\n            {showNav ?\r\n            <nav className='smallNav'>\r\n                <ul>\r\n                    { !isAuthenticated ?\r\n                    <li>\r\n                        <Button  onClick={() => loginWithRedirect()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log In</Button>\r\n                    </li>\r\n                    :\r\n                    <li>\r\n                        <Button  onClick={() => logout()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log Out</Button>\r\n                    </li>\r\n                    }\r\n                    <li>\r\n                        <Link to='/myprofile'>My Profile</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to='/'>Weather</Link>\r\n                    </li>\r\n                \r\n                    <li> \r\n                        <Link to='/about'>About</Link>\r\n                    </li>\r\n\r\n                    <li> \r\n                        <Link to='/privacypolicy'>Privacy Policy</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            : null\r\n            }\r\n\r\n            {/*DESKTOP NAVIGATION*/}\r\n\r\n            <nav>\r\n                <ul>\r\n                    { !isAuthenticated ?\r\n                    <li>\r\n                        <Button  onClick={() => loginWithRedirect()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log In</Button>\r\n                    </li>\r\n                    :\r\n                    <li>\r\n                        <Button  onClick={() => logout()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log Out</Button>\r\n                    </li>\r\n                    }\r\n                    <li>\r\n                        <Link to='/myprofile'>My Profile</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to='/'>Weather</Link>\r\n                    </li>\r\n                \r\n                    <li> \r\n                        <Link to='/about'>About</Link>\r\n                    </li>\r\n\r\n                    <li> \r\n                        <Link to='/privacypolicy'>Privacy Policy</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react';\r\n\r\n//styles\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n/*passing prop getWeather from Home component(using ES6 props/object destructuring),\r\n so it could be accessed onSubmit*/\r\n\r\n/*without destructuring: const WeatherForm = (props) => { const getWeather = props.getWeather */\r\nconst WeatherForm = ( {handleSubmit, isError} ) => {\r\n    \r\n    return (\r\n        <>\r\n            <Form className='box' onSubmit={handleSubmit}> \r\n\r\n                <Form.Group className='mb-3' controlId='country'>\r\n                    <Form.Control type='text' placeholder='Country' />\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3' controlId='city'>\r\n                    <Form.Control type='text' placeholder='City' />\r\n                </Form.Group>\r\n\r\n                <div className='col text-center'>\r\n                    <Button className='btn btn-primary btn-lg'\r\n                            type='submit'  \r\n                            variant='primary' \r\n                            style={{marginTop: '1rem'}}> Get Weather\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n\r\n            {isError && <span className='errMsg' \r\n                            style={{display:'block'}}>\r\n                            Something went wrong. Please check if your input is valid.\r\n                        </span>\r\n            }\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default WeatherForm;","import React from \"react\";\r\n\r\n//styles\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst WeatherTable = ({ \r\n    isInitialRender,\r\n    isLoading,\r\n    isError,\r\n    city,\r\n    country,\r\n    temp,\r\n    temp_max,\r\n    temp_min,\r\n    description,\r\n    icon\r\n    }) => {\r\n    \r\n    return (\r\n        <>\r\n\r\n            {isLoading ? (\r\n                <div className='loader' />\r\n                ) : (\r\n                <div className='weatherTable'>\r\n            \r\n                    {(!isInitialRender && !isError) ? \r\n                        <>\r\n                            { city && country ? <span className='cityCountry'><h3>{ city }, { country }</h3></span> : null }\r\n                            \r\n                            <Table striped bordered hover style={{maxWidth:'100%'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>°C</th>\r\n                                    <th>Min./Max. °C</th>\r\n                                    <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <tr>\r\n                                    {/*Math.floor() function returns the largest integer less than or equal to a given number */}\r\n                                    <td className='align-middle'>{ temp ? <span>{ Math.floor(temp) }&deg;</span> : null }</td>\r\n                                    <td className='align-middle'>  { temp_min && temp_max \r\n                                                ? <span>{ Math.floor(temp_min) }&deg; - { Math.floor(temp_max) }&deg;</span>\r\n                                                : null \r\n                                            }\r\n                                    </td>\r\n                                    <td className='align-middle'> \r\n                                        <img className='openWeatherIcon' src={`http://openweathermap.org/img/w/${icon}.png`} alt='weathericon'/> \r\n                                        { description }\r\n                                    </td>\r\n                                    \r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            </> : null }\r\n                </div>)}                    \r\n        </>\r\n    );          \r\n};\r\n    \r\nexport default WeatherTable;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n//components\r\nimport WeatherForm from './WeatherForm';\r\nimport WeatherTable from './WeatherTable'\r\n\r\n//icons\r\nimport { Icon } from '@iconify/react';\r\nimport weatherIcon from '@iconify/icons-flat-ui/weather';\r\n\r\nconst Weather = () => {\r\n    // API KEY - to fetch env variable from frontend it HAS TO be named REACT_APP_... -https://create-react-app.dev/docs/adding-custom-environment-variables/\r\n    const apiKey = process.env.REACT_APP_API_KEY;\r\n      //console.log(apiKey);\r\n\r\n    //Handling state\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n    const [temp, setTemp] = useState('');\r\n    const [temp_min, setTemp_min] = useState('');\r\n    const [temp_max, setTemp_max] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [isInitialRender, setIsInitialRender] = useState(true);\r\n\r\n    const getWeatherData = async (event) => {\r\n\r\n        const city = event.target.elements.city.value;\r\n        const country = event.target.elements.country.value; \r\n\r\n        //console.log(typeof city); //typof input is always a string     \r\n          if(!city) {\r\n          alert('Field cannot be empty. Please enter city.');\r\n          return\r\n          };\r\n\r\n        // ako input pretvoren (Number(city) u broj nije NaN (ako JE broj, a je jer smo ga upravo pretvorili)\r\n        // (sa time da Nan mora biti tipa Number)\r\n          if(!Number.isNaN(Number(city))) { \r\n              alert ('Please enter valid city name.');\r\n              return\r\n          };\r\n    \r\n        setIsError(false);\r\n        setIsLoading(true);\r\n\r\n        if ( city ) { \r\n          try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&mode=json&units=metric&appid=${apiKey}`);\r\n                  setCity(response.data.name);\r\n                  setCountry(response.data.sys.country);\r\n                  setTemp(response.data.main.temp);\r\n                  setTemp_max(response.data.main.temp_max);\r\n                  setTemp_min(response.data.main.temp_min);\r\n                  setDescription(response.data.weather[0].description); //[0] - weather is an array so displaying only first element, doesn't work without it\r\n                  setIcon(response.data.weather[0].icon); \r\n\r\n                  if (isInitialRender) {setIsInitialRender(false)}\r\n          } catch (err) {\r\n            console.log(err);\r\n            setIsError(true);\r\n          };\r\n        }\r\n   \r\n        setIsLoading(false);\r\n      };\r\n   \r\n    const handleSubmit = event => {\r\n      event.preventDefault(); //by default browser behavior, on submission of a form, the page will redirect and refresh - we don't want that\r\n      getWeatherData(event); //calling the function that fetches data from API\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className='header'>\r\n                <Icon className='weatherIcon' icon={weatherIcon}/>\r\n                <span><h1>Weather App</h1></span>\r\n            </div>\r\n\r\n            <div className='homeContainer'>\r\n                <WeatherForm //declaring component props/passing the handleSubmit function (that calls getWeatherData()) as prop value and isError state\r\n                  handleSubmit = {handleSubmit}\r\n                  isError = {isError} /> \r\n                \r\n                <WeatherTable //declaring props as above\r\n                  isInitialRender = {isInitialRender}\r\n                  isLoading = {isLoading}\r\n                  isError = {isError}\r\n                  city = {city} \r\n                  country = {country} \r\n                  temp = {temp} \r\n                  temp_max = {temp_max}\r\n                  temp_min = {temp_min}\r\n                  description = {description} \r\n                  icon = {icon} />\r\n            </div>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather","import React from 'react';\r\n\r\n//services\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n//styles\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n/*//icons\r\nimport { Icon } from '@iconify/react';\r\nimport bxsUserCircle from '@iconify/icons-bx/bxs-user-circle';\r\n<Icon className='loginIcon' icon={bxsUserCircle} style={{color: '#0683f1', fontSize: '90px'}} />*/\r\n\r\nconst UserProfile = () => {\r\n\r\n  const { user, loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    <>\r\n    { isAuthenticated ?\r\n      <div className='header'>\r\n        <img className='userLogo' src={user.picture} alt={user.name} />\r\n        <span><h1>{user.name}</h1></span>\r\n        <span><h3>(<i>{user.nickname})</i></h3></span>\r\n        <span><h4>{user.email}</h4></span>\r\n      </div>\r\n    : <div className='noUser'>\r\n      Please &nbsp; <Button  onClick={() => loginWithRedirect()}  type='submit' value='search' variant='primary' style={{fontSize:'large'}}>Log In</Button> &nbsp; to view this page.\r\n      </div>\r\n    }\r\n\r\n    </>\r\n  )\r\n \r\n}\r\n\r\nexport default UserProfile;\r\n\r\n   /*<div className='homeContainer'>\r\n        <pre className='userInfo'>\r\n        //{JSON.stringify(user, null, 2)}\r\n        </pre>\r\n      </div>*/\r\n","import React from 'react';\r\n\r\n//icons\r\nimport { Icon } from '@iconify/react';\r\nimport info24Filled from '@iconify/icons-fluent/info-24-filled';\r\nimport githubIcon from '@iconify/icons-entypo-social/github';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <Icon className='loginIcon' icon={info24Filled} style={{color: '#0d6efd', fontSize: '90px'}} />\r\n        <span><h1>About</h1></span>\r\n      </div>\r\n      \r\n      <div className='homeContainer'>\r\n        <h5 className='aboutText' style={{fontWeight:'200'}}>\r\n          Hello! This app was made to practice Auth0 authentication and fetching data from external APIs.\r\n        </h5>\r\n        \r\n        <br/>\r\n        Check out my Github profile: \r\n        <a href='http://github.com/tasteslikestrawberries' style={{color:'#0d6efd'}} target='_blank' rel='noreferrer'>\r\n          <Icon icon={githubIcon} style={{fontSize: '43px', color: '#242526', margin: '1rem 0'}} />\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n \r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n  \r\n        <div className='privacyPolicy'>\r\n\r\n            <h1>Privacy Policy for Weather App</h1>\r\n                <p>At <a href='https://tasteslikestrawberries.github.io/weather-app'>Weather App</a>, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Weather App and how we use it.</p>\r\n                <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Weather App. This policy is not applicable to any information collected offline or via channels other than this website. Our Privacy Policy was created with the help of the <a href=\"https://www.privacypolicygenerator.info/\">Privacy Policy Generator</a>.</p>\r\n\r\n                <h2>Consent</h2>\r\n\r\n                <p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\r\n\r\n                <h2>Information we collect</h2>\r\n\r\n                <p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.</p>\r\n                <p>If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.</p>\r\n                <p>When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.</p>\r\n\r\n                <h2>How we use your information</h2>\r\n\r\n                <p>We use the information we collect in various ways, including to:</p>\r\n\r\n                <ul>\r\n                <li>Provide, operate, and maintain our website</li>\r\n                <li>Improve, personalize, and expand our website</li>\r\n                <li>Understand and analyze how you use our website</li>\r\n                <li>Develop new products, services, features, and functionality</li>\r\n                </ul>\r\n\r\n                <h2>Log Files</h2>\r\n\r\n                <p>Weather App follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.</p>\r\n\r\n\r\n                <h2>GDPR Data Protection Rights</h2>\r\n\r\n                <p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:</p>\r\n                <p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.</p>\r\n                <p>The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\r\n                <p>The right to erasure – You have the right to request that we erase your personal data, under certain conditions.</p>\r\n                <p>The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.</p>\r\n                <p>The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.</p>\r\n                <p>The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.</p>\r\n                <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us via <a href='mailto:tasteslikestrawberries.design@gmail.com'>e-mail</a>.</p>\r\n                \r\n        </div>\r\n    </>\r\n  )\r\n \r\n}\r\n\r\nexport default About;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n//components\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Navigation from './components/Navigation'\r\nimport Weather from './components/Weather/Weather'\r\nimport UserProfile from './components/UserProfile'\r\nimport About from './components/About'\r\nimport PrivacyPolicy from './components/PrivacyPolicy'\r\n\r\n//styles\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';  \r\n\r\nconst App = () => {\r\n  \r\n  return ( \r\n    <Router> \r\n      <ScrollToTop />\r\n      <>\r\n          <Navigation />\r\n\r\n          <Switch>\r\n            <Route path='/privacypolicy'>\r\n              <PrivacyPolicy />\r\n            </Route>\r\n\r\n            <Route path='/about'>\r\n              <About /> \r\n            </Route>\r\n\r\n            <Route path='/myprofile'>\r\n              <UserProfile />\r\n            </Route>\r\n\r\n            <Route path='/'>\r\n              <Weather />\r\n            </Route>\r\n        </Switch>\r\n\r\n      </>\r\n    </Router>\r\n  )\r\n \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles.css';\r\nimport App from './App';\r\n\r\n//services\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\n\r\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nReactDOM.render(\r\n  <Auth0Provider\r\n    domain={domain}\r\n    clientId={clientId}\r\n    redirectUri='https://tasteslikestrawberries.github.io/weather-app'>\r\n    <App />\r\n  </Auth0Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/* redirectUri={window.location.origin}*/\r\n"],"sourceRoot":""}