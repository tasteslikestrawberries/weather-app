{"version":3,"sources":["components/Weather/WeatherForm.js","components/Weather/WeatherTable.js","components/Weather/Weather.js","components/Login/UserProfile.js","components/About.js","App.js","index.js"],"names":["WeatherForm","handleSubmit","isError","Form","className","onSubmit","Group","controlId","Control","type","placeholder","Button","variant","style","marginTop","display","WeatherTable","isInitialRender","isLoading","city","country","temp","temp_max","temp_min","description","icon","Table","striped","bordered","hover","maxWidth","Math","floor","src","alt","Weather","useState","setCity","setCountry","setDescription","setIcon","setTemp","setTemp_min","setTemp_max","setIsLoading","setIsError","setIsInitialRender","getWeatherData","event","a","target","elements","value","alert","Number","isNaN","axios","get","process","response","data","name","sys","main","weather","console","log","weatherIcon","preventDefault","UserProfile","useAuth0","user","loginWithRedirect","isAuthenticated","picture","nickname","email","onClick","fontSize","About","info24Filled","color","fontWeight","href","rel","githubIcon","margin","App","logout","backgroundColor","to","path","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.d8e9f452.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//styles\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n/*passing prop getWeather from Home component(using ES6 props/object destructuring),\r\n so it could be accessed onSubmit*/\r\n\r\n/*without destructuring: const WeatherForm = (props) => { const getWeather = props.getWeather */\r\nconst WeatherForm = ( {handleSubmit, isError} ) => {\r\n    \r\n    return (\r\n        <>\r\n            <Form className='box' onSubmit={handleSubmit}> \r\n\r\n                <Form.Group className='mb-3' controlId='country'>\r\n                    <Form.Control type='text' placeholder='Country' />\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3' controlId='city'>\r\n                    <Form.Control type='text' placeholder='City' />\r\n                </Form.Group>\r\n\r\n                <div className='col text-center'>\r\n                    <Button className='btn btn-primary btn-lg'\r\n                            type='submit'  \r\n                            variant='primary' \r\n                            style={{marginTop: '1rem'}}> Get Weather\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n\r\n            {isError && <span className='errMsg' \r\n                            style={{display:'block'}}>\r\n                            Something went wrong. Please check if your input is valid.\r\n                        </span>\r\n            }\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default WeatherForm;","import React from \"react\";\r\n\r\n//styles\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst WeatherTable = ({ \r\n    isInitialRender,\r\n    isLoading,\r\n    isError,\r\n    city,\r\n    country,\r\n    temp,\r\n    temp_max,\r\n    temp_min,\r\n    description,\r\n    icon\r\n    }) => {\r\n    \r\n    return (\r\n        <>\r\n\r\n            {isLoading ? (\r\n                <div className='loader' />\r\n                ) : (\r\n                <div className='weatherTable'>\r\n            \r\n                    {(!isInitialRender && !isError) ? \r\n                        <>\r\n                            { city && country ? <span className='cityCountry'><h3>{ city }, { country }</h3></span> : null }\r\n                            \r\n                            <Table striped bordered hover style={{maxWidth:'100%'}}>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>°C</th>\r\n                                    <th>Min./Max. °C</th>\r\n                                    <th>Description</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    <tr>\r\n                                    {/*Math.floor() function returns the largest integer less than or equal to a given number */}\r\n                                    <td className='align-middle'>{ temp ? <span>{ Math.floor(temp) }&deg;</span> : null }</td>\r\n                                    <td className='align-middle'>  { temp_min && temp_max \r\n                                                ? <span>{ Math.floor(temp_min) }&deg; - { Math.floor(temp_max) }&deg;</span>\r\n                                                : null \r\n                                            }\r\n                                    </td>\r\n                                    <td className='align-middle'> \r\n                                        <img className='openWeatherIcon' src={`http://openweathermap.org/img/w/${icon}.png`} alt='weathericon'/> \r\n                                        { description }\r\n                                    </td>\r\n                                    \r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            </> : null }\r\n                </div>)}                    \r\n        </>\r\n    );          \r\n};\r\n    \r\nexport default WeatherTable;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n//components\r\nimport WeatherForm from './WeatherForm';\r\nimport WeatherTable from './WeatherTable'\r\n\r\n//icons\r\nimport { Icon } from '@iconify/react';\r\nimport weatherIcon from '@iconify/icons-flat-ui/weather';\r\n\r\nconst Weather = () => {\r\n    // API KEY - to fetch env variable from frontend it HAS TO be named REACT_APP_... -https://create-react-app.dev/docs/adding-custom-environment-variables/\r\n    const apiKey = process.env.REACT_APP_API_KEY;\r\n      //console.log(apiKey);\r\n\r\n    //Handling state\r\n    const [city, setCity] = useState('');\r\n    const [country, setCountry] = useState('');\r\n\r\n    const [description, setDescription] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n    const [temp, setTemp] = useState('');\r\n    const [temp_min, setTemp_min] = useState('');\r\n    const [temp_max, setTemp_max] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [isInitialRender, setIsInitialRender] = useState(true);\r\n\r\n    const getWeatherData = async (event) => {\r\n\r\n        const city = event.target.elements.city.value;\r\n        const country = event.target.elements.country.value; \r\n\r\n        //console.log(typeof city); //typof input is always a string     \r\n          if(!city) {\r\n          alert('Field cannot be empty. Please enter city.');\r\n          return\r\n          };\r\n\r\n        // ako input pretvoren (Number(city) u broj nije NaN (ako JE broj, a je jer smo ga upravo pretvorili)\r\n        // (sa time da Nan mora biti tipa Number)\r\n          if(!Number.isNaN(Number(city))) { \r\n              alert ('Please enter valid city name.');\r\n              return\r\n          };\r\n    \r\n        setIsError(false);\r\n        setIsLoading(true);\r\n\r\n        if ( city ) { \r\n          try {\r\n            const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&mode=json&units=metric&appid=${apiKey}`);\r\n                  setCity(response.data.name);\r\n                  setCountry(response.data.sys.country);\r\n                  setTemp(response.data.main.temp);\r\n                  setTemp_max(response.data.main.temp_max);\r\n                  setTemp_min(response.data.main.temp_min);\r\n                  setDescription(response.data.weather[0].description); //[0] - weather is an array so displaying only first element, doesn't work without it\r\n                  setIcon(response.data.weather[0].icon); \r\n\r\n                  if (isInitialRender) {setIsInitialRender(false)}\r\n          } catch (err) {\r\n            console.log(err);\r\n            setIsError(true);\r\n          };\r\n        }\r\n   \r\n        setIsLoading(false);\r\n      };\r\n   \r\n    const handleSubmit = event => {\r\n      event.preventDefault(); //by default browser behavior, on submission of a form, the page will redirect and refresh - we don't want that\r\n      getWeatherData(event); //calling the function that fetches data from API\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <div className='header'>\r\n                <Icon className='weatherIcon' icon={weatherIcon}/>\r\n                <span><h1>Weather App</h1></span>\r\n            </div>\r\n\r\n            <div className='homeContainer'>\r\n                <WeatherForm //declaring component props/passing the handleSubmit function (that calls getWeatherData()) as prop value and isError state\r\n                  handleSubmit = {handleSubmit}\r\n                  isError = {isError} /> \r\n                \r\n                <WeatherTable //declaring props as above\r\n                  isInitialRender = {isInitialRender}\r\n                  isLoading = {isLoading}\r\n                  isError = {isError}\r\n                  city = {city} \r\n                  country = {country} \r\n                  temp = {temp} \r\n                  temp_max = {temp_max}\r\n                  temp_min = {temp_min}\r\n                  description = {description} \r\n                  icon = {icon} />\r\n            </div>\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather","import React from 'react';\r\n\r\n//services\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\n//styles\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n/*//icons\r\nimport { Icon } from '@iconify/react';\r\nimport bxsUserCircle from '@iconify/icons-bx/bxs-user-circle';\r\n<Icon className='loginIcon' icon={bxsUserCircle} style={{color: '#0683f1', fontSize: '90px'}} />*/\r\n\r\nconst UserProfile = () => {\r\n\r\n  const { user, loginWithRedirect, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    <>\r\n    { isAuthenticated ?\r\n      <div className='header'>\r\n        <img className='userLogo' src={user.picture} alt={user.name} />\r\n        <span><h1>{user.name}</h1></span>\r\n        <span><h3>(<i>{user.nickname})</i></h3></span>\r\n        <span><h4>{user.email}</h4></span>\r\n      </div>\r\n    : <div className='noUser'>\r\n      <h5>Please <Button  onClick={() => loginWithRedirect()}  type='submit' value='search' variant='primary' style={{fontSize:'large'}}>Log In</Button> to view this page.</h5>\r\n      </div>\r\n    }\r\n\r\n    </>\r\n  )\r\n \r\n}\r\n\r\nexport default UserProfile;\r\n\r\n   /*<div className='homeContainer'>\r\n        <pre className='userInfo'>\r\n        //{JSON.stringify(user, null, 2)}\r\n        </pre>\r\n      </div>*/\r\n","import React from 'react';\r\n\r\n//icons\r\nimport { Icon } from '@iconify/react';\r\nimport info24Filled from '@iconify/icons-fluent/info-24-filled';\r\nimport githubIcon from '@iconify/icons-entypo-social/github';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <Icon className='loginIcon' icon={info24Filled} style={{color: '#0d6efd', fontSize: '90px'}} />\r\n        <span><h1>About</h1></span>\r\n      </div>\r\n\r\n      <div className='homeContainer'>\r\n        <h5 className='aboutText' style={{fontWeight:'200'}}>\r\n          Hello! This app was made to practice OAuth 2.0 authentication and fetching data from external APIs.\r\n        </h5>\r\n        \r\n        <br/>\r\n        Check out my Github profile: \r\n        <a href='http://github.com/tasteslikestrawberries' style={{color:'#0d6efd'}} target='_blank' rel='noreferrer'>\r\n          <Icon icon={githubIcon} style={{fontSize: '43px', color: '#242526', margin: '1rem 0'}} />\r\n        </a>\r\n      </div>\r\n    </>\r\n  )\r\n \r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n//services\nimport { useAuth0 } from '@auth0/auth0-react';\n\n//components\nimport Weather from './components/Weather/Weather'\nimport UserProfile from './components/Login/UserProfile'\nimport About from './components/About'\n\n//styles\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button'\nimport './styles.css';\n\nconst App = () => {\n  /*destructuring, this is fetching the loginWithRedirect that is a property of useAuth0() function \n  that has many properties, but we only need this one, not the whole object that the function returns. \n  Without destructuring it would look like:\n  const x = useAuth();\n  const loginWithRedirect = x.loginWithRedirect*/\n  const { loginWithRedirect, logout, isAuthenticated } = useAuth0(); \n\n  return (\n    <Router>\n      <>\n        <nav>\n              <ul>\n                { !isAuthenticated ?\n                  <li>\n                    <Button  onClick={() => loginWithRedirect()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log In</Button>\n                  </li>\n                :\n                  <li>\n                    <Button  onClick={() => logout()} className='btn-lg' type='submit' value='search' variant='primary' style={{backgroundColor:'#0854c4', fontSize:'large'}}>Log Out</Button>\n                  </li>\n                }\n                  <li>\n                    <Link to='/myprofile'>My Profile</Link>\n                  </li>\n               \n                  <li> \n                    <Link to='/about'>About</Link>\n                  </li>\n              </ul>\n          </nav>\n\n          <Switch>\n            <Route path='/about'>\n              <About />\n            </Route>\n\n            <Route path='/myprofile'>\n              <UserProfile />\n            </Route>\n\n            <Route path='/'>\n              <Weather />\n            </Route>\n        </Switch>\n\n      </>\n    </Router>\n  )\n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\n//services\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <Auth0Provider\n    domain={domain}\n    clientId={clientId}\n    redirectUri={window.location.origin}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}